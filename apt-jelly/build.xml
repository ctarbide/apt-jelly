<?xml version="1.0" encoding="UTF-8"?>

<project default="dist" name="apt-jelly" basedir="." xmlns:artifact="urn:maven-artifact-ant">

  <target name="init" description="initializes some properties">
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" loaderref="antlib.loader">
      <classpath>
        <fileset dir="lib">
          <include name="maven-ant-tasks-*.jar"/>
        </fileset>
      </classpath>
    </typedef>

    <artifact:pom id="parent.pom" file="${basedir}/pom.xml"/>

    <echo message="Current version is: ${parent.pom.version}"/>
    <property name="dist.name" value="apt-jelly-${parent.pom.version}"/>
    <property name="dist.dir" value="target/dist"/>
    <property name="docs.dir" value="target/docs"/>
    <property name="javadoc.dir" value="${docs.dir}/api"/>

    <artifact:dependencies filesetId="all.libs.fileset" pathId="all.libs.path">
      <dependency groupId="net.sf.apt-jelly" artifactId="apt-jelly-jelly" version="${parent.pom.version}"/>
      <dependency groupId="net.sf.apt-jelly" artifactId="apt-jelly-freemarker" version="${parent.pom.version}"/>
    </artifact:dependencies>
  </target>

  <target name="doc" depends="init" description="generates some relevant documentation">
    <mkdir dir="${javadoc.dir}"/>

    <copy todir="${docs.dir}">
      <fileset dir="doc"/>
    </copy>

    <javadoc doctitle="apt-jelly" windowtitle="apt-jelly" destdir="${javadoc.dir}" author="true" version="true" packagenames="*">
      <fileset dir="${basedir}">
        <include name="**/src/main/java/**/*.java"/>
        <exclude name="**/samples/**"/>
      </fileset>

      <sourcepath>
        <dirset dir="${basedir}">
          <include name="**/src/main/resources"/>
          <exclude name="**/samples/**"/>
        </dirset>
      </sourcepath>

      <classpath>
        <path refid="all.libs.path"/>
        <pathelement location="${java.home}/../lib/tools.jar"/>
        <path path="${java.class.path}"/>
      </classpath>

    </javadoc>

    <mkdir dir="${docs.dir}/examples"/>
    <copy todir="${docs.dir}/examples">
      <fileset dir="${basedir}">
        <include name="**/src/test/**/*.jelly"/>
      </fileset>
      <mapper type="flatten"/>
    </copy>
  </target>

  <target name="dist" description="create the distribution bundle" depends="doc">
    <mkdir dir="${dist.dir}/docs"/>
    <mkdir dir="${dist.dir}/lib"/>

    <copy todir="${dist.dir}/docs">
      <fileset dir="${docs.dir}"/>
    </copy>
    <copy todir="${dist.dir}/lib">
      <fileset refid="all.libs.fileset"/>
      <mapper type="flatten"/>
    </copy>

    <zip destfile="target/${dist.name}.zip">
      <zipfileset dir="${dist.dir}" prefix="apt-jelly"/>
      <zipfileset dir="." includes="LICENSE NOTICE" prefix="apt-jelly"/>
    </zip>

    <tar destfile="target/${dist.name}.tar.gz" compression="gzip">
      <tarfileset dir="${dist.dir}" prefix="apt-jelly"/>
      <tarfileset dir="." includes="LICENSE NOTICE" prefix="apt-jelly"/>
    </tar>
  </target>

  <target name="src-dist" depends="init" description="creates a source distribution">
    <zip destfile="target/${dist.name}-src.zip">
      <zipfileset dir="core/src/main/java" prefix="apt-jelly/src"/>
      <zipfileset dir="freemarker/src/main/java" prefix="apt-jelly/src"/>
      <zipfileset dir="jelly/src/main/java" prefix="apt-jelly/src"/>
    </zip>
    <tar destfile="target/${dist.name}-src.tar.gz" compression="gzip">
      <tarfileset dir="core/src/main/java" prefix="apt-jelly/src"/>
      <tarfileset dir="freemarker/src/main/java" prefix="apt-jelly/src"/>
      <tarfileset dir="jelly/src/main/java" prefix="apt-jelly/src"/>
    </tar>
  </target>

  <target name="clean" description="clean up the generated directories">
    <delete dir="target"/>
  </target>

</project>
