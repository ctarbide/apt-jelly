<?xml version="1.0" encoding="UTF-8"?>

<project default="jar" name="apt-jelly" basedir=".">

  <property file="build.properties"/>

  <property name="dist.dir" value="target/dist"/>
  <property name="dist.name" value="apt-jelly-${version}"/>

  <path id="build.classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
    <pathelement location="${java.home}/../lib/tools.jar"/>
  </path>

  <target name="init" description="initializes some properties"/>

  <target name="compile" description="compiles the code for the apt-jelly">
    <ant antfile="build-core.xml" target="compile"/>
    <ant antfile="build-jelly.xml" target="compile"/>
    <ant antfile="build-freemarker.xml" target="compile"/>
  </target>

  <target name="jar" description="builds the jars for the apt-jelly project">
    <ant antfile="build-core.xml" target="test"/>
    <ant antfile="build-jelly.xml" target="test"/>
    <ant antfile="build-freemarker.xml" target="test"/>

    <mkdir dir="target"/>
    <jar jarfile="target/${dist.name}.jar">
      <fileset dir="target/core/classes"/>
      <fileset dir="target/freemarker/classes"/>
      <fileset dir="target/jelly/classes"/>
    </jar>
  </target>

  <target name="jar-only" description="builds the jars without running the tests for the apt-jelly project">
    <ant antfile="build-core.xml" target="compile"/>
    <ant antfile="build-jelly.xml" target="compile"/>
    <ant antfile="build-freemarker.xml" target="compile"/>

    <mkdir dir="target"/>
    <jar jarfile="target/${dist.name}.jar">
      <fileset dir="target/core/classes"/>
      <fileset dir="target/freemarker/classes"/>
      <fileset dir="target/jelly/classes"/>
    </jar>
  </target>

  <target name="doc" description="generates some relevant documentation">
    <mkdir dir="${javadoc.dir}"/>
    <property name="title" value="apt-jelly"/>

    <javadoc use="true" destdir="${javadoc.dir}" author="true" windowtitle="apt-jelly" doctitle="apt-jelly">
      <fileset dir="src/java"/>
      <classpath refid="build.classpath"/>
    </javadoc>

    <mkdir dir="${docs.dir}/examples"/>
    <copy todir="${docs.dir}/examples">
      <fileset dir="src/test">
        <include name="**/*.jelly"/>
      </fileset>
      <mapper type="flatten"/>
    </copy>
  </target>

  <target name="dist" description="create the distribution bundle" depends="jar, doc">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir}/docs"/>
    <mkdir dir="${dist.dir}/lib"/>

    <zip destfile="target/${dist.name}.zip">
      <zipfileset dir="${docs.dir}" prefix="apt-jelly/docs"/>
      <zipfileset dir="${lib.dir}" prefix="apt-jelly/lib"/>
      <zipfileset dir="." includes="LICENSE NOTICE" prefix="apt-jelly"/>
      <zipfileset dir="target" includes="*.jar" prefix="apt-jelly"/>
    </zip>

    <tar destfile="target/${dist.name}.tar.gz" compression="gzip">
      <tarfileset dir="${docs.dir}" prefix="apt-jelly/docs"/>
      <tarfileset dir="${lib.dir}" prefix="apt-jelly/lib"/>
      <tarfileset dir="." includes="LICENSE NOTICE" prefix="apt-jelly"/>
      <tarfileset dir="target" includes="*.jar" prefix="apt-jelly"/>
    </tar>
  </target>

  <target name="src-dist" description="creates a source distribution">
    <zip destfile="target/${dist.name}-src.zip">
      <zipfileset dir="src/java" prefix="src"/>
    </zip>
    <tar destfile="target/${dist.name}-src.tar.gz" compression="gzip">
      <tarfileset dir="src/java" prefix="src"/>
    </tar>
  </target>

  <target name="clean" description="clean up the generated directories">
    <delete dir="target"/>
    <delete dir="${javadoc.dir}/"/>
    <delete dir="${docs.dir}/examples"/>
  </target>

  <target name="test" description="run the test cases">
    <ant antfile="build-core.xml" target="test"/>
    <ant antfile="build-jelly.xml" target="test"/>
    <ant antfile="build-freemarker.xml" target="test"/>
  </target>

</project>
