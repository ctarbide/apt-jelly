<?xml version="1.0" encoding="UTF-8"?>

<project default="test" name="apt-jelly-freemarker" basedir=".">

  <property file="build.properties"/>

  <property name="src.dir" value="src/java/freemarker"/>
  <property name="src.test.dir" value="src/test/freemarker"/>
  <property name="build.dir" value="target/freemarker/classes"/>
  <property name="test.build.dir" value="target/freemarker/test-classes"/>
  <property name="test.report.dir" value="target/freemarker/test-reports"/>
  <property name="final.name" value="apt-jelly-freemarker-${version}"/>

  <target name="init" description="initializes some properties">
    <!--first make sure the core classes are compiled.-->
    <ant antfile="build-core.xml" target="compile" inheritall="false" inheritrefs="false"/>

    <path id="build.classpath">
      <fileset dir="${lib.dir}">
        <include name="freemarker-*.jar"/>
        <include name="junit-*.jar"/>
      </fileset>
      <pathelement location="${java.home}/../lib/tools.jar"/>
      <pathelement location="${core.classes.dir}"/>
    </path>

    <path id="run.classpath">
      <path refid="build.classpath"/>
      <pathelement path="${build.dir}"/>
    </path>

  </target>

  <target name="compile" description="compile the code" depends="init">

    <mkdir dir="${build.dir}"/>

    <javac destdir="${build.dir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="${src.dir}"/>
      </src>
      <classpath refid="build.classpath"/>
    </javac>

    <copy todir="${build.dir}">
      <fileset dir="${src.dir}">
        <include name="**/*.xsd"/>
        <include name="**/*.xml"/>
        <include name="**/*.fmt"/>
      </fileset>
    </copy>

  </target>

  <target name="clean" description="clean up the generated directories">
    <delete dir="target"/>
    <delete dir="${javadoc.dir}"/>
    <delete dir="${docs.dir}/examples"/>
  </target>

  <target name="test" description="run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures."/>
  </target>

  <target name="internal-test" depends="compile-tests">
    <mkdir dir="${test.report.dir}"/>
    <junit dir="./" failureproperty="test.failure" printSummary="yes" fork="false" haltonerror="true">
      <sysproperty key="basedir" value="."/>
      <sysproperty key="apt.test.src.dir" value="${basedir}/src/samplesource"/>
      <formatter type="xml"/>
      <formatter usefile="false" type="plain"/>
      <classpath>
        <path refid="run.classpath"/>
        <pathelement location="${test.build.dir}"/>
      </classpath>

      <batchtest todir="${test.report.dir}">
        <fileset dir="${src.test.dir}">
          <include name="**/Test*"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="compile-tests" depends="compile">
    <mkdir dir="${test.build.dir}"/>
    <javac destdir="${test.build.dir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="${src.test.dir}"/>
      </src>
      <classpath refid="run.classpath"/>
    </javac>

    <copy todir="${test.build.dir}">
      <fileset dir="${src.test.dir}">
        <include name="**/*.xml"/>
        <include name="**/*.fmt"/>
        <include name="**/*.properties"/>
      </fileset>
    </copy>
    <copy todir="${test.build.dir}" file="src/test/log4j.xml"/>
  </target>

</project>
